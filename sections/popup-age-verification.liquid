{%-  liquid
  if shop.customer_accounts_enabled and customer.id != blank
    assign show_popup = false
  else
    assign show_popup = true
  endif
  for block in section.blocks
    if block.type == 'buttons' and block.settings.decline_button_link != blank
      if request.path == block.settings.decline_button_link
        assign disable_popup = true
      endif
    endif
  endfor
-%}
{% unless disable_popup %}
  {%- style -%}
    .age-popup-{{ section.id }} {
      {% if section.settings.background_color_light.alpha != 0.0 %}
        --colors-background: {{ section.settings.background_color_light.red }}, {{ section.settings.background_color_light.green }}, {{ section.settings.background_color_light.blue }};
      {% else %}
        --colors-background: var(--colors-background-secondary);
      {% endif %}
    }
    .dark .age-popup-{{ section.id }} {
      {% if section.settings.background_color_dark.alpha != 0.0 %}
        --colors-background: {{ section.settings.background_color_dark.red }}, {{ section.settings.background_color_dark.green }}, {{ section.settings.background_color_dark.blue }};
      {% else %}
        --colors-background: var(--colors-background-secondary);
      {% endif %}
    }
  {%- endstyle -%}
  <div
    id="x-age-popup-{{ section.id }}"
    class="age-popup-{{ section.id }}"
    x-data='xPopups({
      "sectionId": "{{ section.id }}",
      "name": "popup-age-verification",
      "delayDays": {{ section.settings.reappear_after }},
      "showOnMobile": true,
      "show_popup": {{ show_popup }},
      "trigger_intent": "delay"
    })'
    x-cloak>
    <div
      class="top-0 left-0 right-0 bottom-0 transition duration-300 z-[60] fixed"
      {% if request.design_mode %}
        x-init="show && load('{{ section.id }}')"
        x-show="show"
      {% else %}
        x-show="show"
        x-init="load('{{ section.id }}')"
      {% endif %}
    >
      <div class="h-full transition ease-in-out duration-500">
        {%- if section.settings.image != blank -%}
          {% liquid
            if settings.enable_lazy_loading_image
              assign loading = 'lazy'
            else
              assign loading = 'eager'
            endif
          %}
          <parallax-image class="block absolute w-full h-full overflow-hidden">
            <parallax-movement x-data="xParallax" x-intersect.once.margin.200px="load({{ settings.disable_parallax_effect }})">
              {%- capture sizes -%} 100vw{%- endcapture -%}
              {{ section.settings.image | image_url: width: 3840 | image_tag: loading: loading, sizes: sizes, widths: '375, 450, 750, 900, 1100, 1500, 2000, 3000, 3840', class: 'h-full w-full object-cover' }}
            </parallax-movement>
          </parallax-image>
        {%- endif -%}  
        <span class="absolute top-0 left-0 bottom-0 right-0 image-treatment-overlay bg-black opacity-{{ section.settings.overlay_opacity }}"></span>
      </div>
      <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 max-w-[500px] w-11/12 lg:w-auto">
        <div 
          role="dialog"
          x-show="show"
          class="content-age-popup bg-[rgba(var(--colors-background))] pt-9 pb-9 pr-6 pl-6 lg:pr-16 lg:pl-16 lg:pt-12 lg:pb-12 ltr text-{{ section.settings.content_alignment }} overflow-y-auto scrollbar-body max-h-[calc(85vh-96px)] md:max-h-[85vh] 2xl:max-h-[77vh]
            {%- if settings.edges_type == 'rounded_corners' %} rounded-[10px]{% endif -%}"
          x-transition:enter="transition-all ease-in-out duration-500"
          x-transition:enter-start="opacity-0 transform translate-y-1/3"
          x-transition:enter-end="opacity-100 transform translate-y-0"
          x-transition:leave="transition-all ease-in-out duration-500"
          x-transition:leave-end="opacity-0 transform translate-y-1/3"
        >
          {%- for block in section.blocks -%}
            {% case block.type %}
              {%- when 'content' -%}
                {%- style -%}
                  .content-text-{{ block.id }} {
                    {%- if block.settings.text_color_light.alpha != 0 -%}
                      --colors-text: {{ block.settings.text_color_light.red }}, {{ block.settings.text_color_light.green }}, {{ block.settings.text_color_light.blue }};
                    {%- endif -%}
                    {%- if block.settings.heading_color.alpha != 0 -%}
                      --colors-heading: {{ block.settings.heading_color.red }}, {{ block.settings.heading_color.green }}, {{ block.settings.heading_color.blue }};
                    {%- endif -%}
                  }
                  .dark .content-text-{{ block.id }} {
                    {%- if block.settings.text_color_dark.alpha != 0 -%}
                      --colors-text: {{ block.settings.text_color_dark.red }}, {{ block.settings.text_color_dark.green }}, {{ block.settings.text_color_dark.blue }};
                    {%- else -%}
                      --colors-text: {{ settings.colors_dark_text.red }}, {{ settings.colors_dark_text.green }}, {{ settings.colors_dark_text.blue }};
                    {%- endif -%}
                    {%- if block.settings.heading_color_dark.alpha != 0 -%}
                      --colors-heading: {{ block.settings.heading_color_dark.red }}, {{ block.settings.heading_color_dark.green }}, {{ block.settings.heading_color_dark.blue }};
                    {%- else -%}
                      --colors-heading: {{ settings.colors_dark_heading.red }}, {{ settings.colors_dark_heading.green }}, {{ settings.colors_dark_heading.blue }};
                    {%- endif -%}
                  }
                {%- endstyle -%}
                <div class="block-popup-age-verification content-text-{{ block.id }}" {{ block.shopify_attributes }}>
                  {%- if block.settings.heading != blank -%}
                    <p class="heading-{{ block.id }} font-bold h2">{{ block.settings.heading }}</p>
                  {%- endif -%}
                  {%- if block.settings.text != blank -%}
                    <div class="p-break-words mt-4 mb-6 leading-tight text-[rgba(var(--colors-text))] rte">
                      {{ block.settings.text }}
                    </div>
                  {%- endif -%}
                </div>
              {%- when 'buttons' -%}
                {%- style -%}
                  .button.accept-button-{{ block.id }}.button-solid {
                    {%- if block.settings.accept_button_text.alpha != 0.0 -%}
                      --colors-button-text: {{ block.settings.accept_button_text.red }}, {{ block.settings.accept_button_text.green }}, {{ block.settings.accept_button_text.blue }};
                    {%- endif -%}
                    {%- if block.settings.accept_button_background.alpha != 0.0 -%}
                      --colors-button: {{ block.settings.accept_button_background.red }}, {{ block.settings.accept_button_background.green }}, {{ block.settings.accept_button_background.blue }};
                    {%- endif -%}
                    {%- if block.settings.accept_button_text_hover.alpha != 0.0 -%}
                      --colors-button-text-hover: {{ block.settings.accept_button_text_hover.red }}, {{ block.settings.accept_button_text_hover.green }}, {{ block.settings.accept_button_text_hover.blue }};
                    {%- endif -%}
                    {%- if block.settings.accept_button_hover.alpha != 0.0 -%}
                      --colors-button-hover: rgb({{ block.settings.accept_button_hover.red }}, {{ block.settings.accept_button_hover.green }}, {{ block.settings.accept_button_hover.blue }});
                    {%- endif -%}
                  }
                  .button.accept-button-{{ block.id }}.button-solid:before {
                    {%- if block.settings.accept_button_hover.alpha != 0.0 -%}
                      --colors-button-hover: rgb({{ block.settings.accept_button_hover.red }}, {{ block.settings.accept_button_hover.green }}, {{ block.settings.accept_button_hover.blue }});
                    {%- endif -%}
                  }
                  .dark .button.accept-button-{{ block.id }}.button-solid {
                    {%- if block.settings.accept_button_text_dark.alpha != 0.0 -%}
                      --colors-button-text: {{ block.settings.accept_button_text_dark.red }}, {{ block.settings.accept_button_text_dark.green }}, {{ block.settings.accept_button_text_dark.blue }};
                    {%- else -%}
                      --colors-button-text: {{ settings.colors_dark_button_text.red }}, {{ settings.colors_dark_button_text.green }}, {{ settings.colors_dark_button_text.blue }};
                    {%- endif -%}
                    {%- if block.settings.accept_button_background_dark.alpha != 0.0 -%}
                      --colors-button: {{ block.settings.accept_button_background_dark.red }}, {{ block.settings.accept_button_background_dark.green }}, {{ block.settings.accept_button_background_dark.blue }};
                    {%- else -%}
                      --colors-button: {{ settings.colors_dark_button.red }}, {{ settings.colors_dark_button.green }}, {{ settings.colors_dark_button.blue }};
                    {%- endif -%}
                    {%- if block.settings.accept_button_text_hover_dark.alpha != 0.0 -%}
                      --colors-button-text-hover: {{ block.settings.accept_button_text_hover_dark.red }}, {{ block.settings.accept_button_text_hover_dark.green }}, {{ block.settings.accept_button_text_hover_dark.blue }};
                    {%- else -%}
                      --colors-button-text-hover: {{ settings.colors_dark_button_text_hover.red }}, {{ settings.colors_dark_button_text_hover.green }}, {{ settings.colors_dark_button_text_hover.blue }};
                    {%- endif -%}
                    {%- if block.settings.accept_button_hover_dark.alpha != 0.0 -%}
                      --colors-button-hover: rgb({{ block.settings.accept_button_hover_dark.red }}, {{ block.settings.accept_button_hover_dark.green }}, {{ block.settings.accept_button_hover_dark.blue }});
                    {%- else -%}
                      --colors-button-hover: rgb({{ settings.colors_dark_button_hover.red }}, {{ settings.colors_dark_button_hover.green }}, {{ settings.colors_dark_button_hover.blue }});
                    {%- endif -%}
                  }
                  .dark .button.accept-button-{{ block.id }}.button-solid:before {
                    {%- if block.settings.accept_button_hover_dark.alpha != 0.0 -%}
                      --colors-button-hover: rgb({{ block.settings.accept_button_hover_dark.red }}, {{ block.settings.accept_button_hover_dark.green }}, {{ block.settings.accept_button_hover_dark.blue }});
                    {%- else -%}
                      --colors-button-hover: rgb({{ settings.colors_dark_button_hover.red }}, {{ settings.colors_dark_button_hover.green }}, {{ settings.colors_dark_button_hover.blue }});
                    {%- endif -%}
                  }
                {%- endstyle -%}
                <div class="block-popup-age-verification mt-4 " {{ block.shopify_attributes }}>
                  <a
                    {% if block.settings.decline_button_link %} href="{{ block.settings.decline_button_link }}"{% if block.settings.open_new_window %} target="_blank"{% endif %}{% else %} role="link" aria-disabled="true"{% endif %} 
                    class="button flex-1 text-center button-outline p-break-words inline-block empty:hidden pl-10 pr-10 pt-4 pb-4 leading-normal{% unless block.settings.decline_button_link %} hover:cursor-not-allowed opacity-70{% endunless %}" 
                  >
                    {%- if block.settings.decline_button_label != blank -%}
                      {{ block.settings.decline_button_label | escape }}
                    {%- else -%}
                      {{ 'sections.popup.decline-button' | t }}
                    {%- endif -%}
                  </a>
                  <button
                    class="button flex-1 button-solid p-break-words accept-button-{{ block.id }} inline-block empty:hidden pl-10 pr-10 pt-4 pb-4 leading-normal" 
                    @click.prevent="close()"
                  >
                    {%- if block.settings.accept_button_label != blank -%}
                      {% assign button_label = block.settings.accept_button_label %}
                    {%- else -%}
                      {% assign button_label = 'sections.popup.accept-button' | t %}
                    {%- endif -%}
                    {% render 'button-label', button_label: button_label, show_button_style: 'primary' %}
                  </button>
                </div>
            {% endcase %}
          {%- endfor -%}
        </div>
      </div>
    </div>
  </div>
<script src="{{ 'popup.js' | asset_url }}" defer></script>
{% endunless %}
{% schema %}
{
  "name": "t:sections.age-verification-popup.name",
  "tag": "section",
  "class": "section-age-verification-popup",
  "limit": 1,
  "disabled_on": {
    "groups": [
      "header",
      "footer"
    ]
  },
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.email-signup-banner.settings.image.label",
      "info": "t:sections.all.image.note_image_size"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "%",
      "label": "t:sections.all.overlay_opacity.label",
      "default": 80
    },
    {
      "type": "select",
      "id": "content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.all.content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.all.content_alignment.options__3.label"
        }
      ],
      "default": "center",
      "label": "t:sections.all.content_alignment.label"
    },
    {
      "type": "range",
      "id": "reappear_after",
      "min": 1,
      "max": 30,
      "step": 1,
      "unit": "day",
      "info": "t:sections.age-verification-popup.settings.reappear-after.info",
      "label": "t:sections.age-verification-popup.settings.reappear-after.label",
      "default": 7
    },
    {
      "type": "color",
      "id": "background_color_light",
      "default": "rgba(0,0,0,0)",
      "label": "t:sections.all.background.background_color_light"
    },
    {
      "type": "color",
      "id": "background_color_dark",
      "label": "t:sections.all.background.background_color_dark",
      "default": "rgba(0,0,0,0)"
    }
  ],
  "blocks": [
    {
      "type": "content",
      "name": "t:sections.collection-list.blocks.promotion_block.settings.content.label",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Confirm your age",
          "label": "t:sections.all.text.heading"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Please verify that you are 18 years of age or older to enter this site.</p>",
          "label": "t:sections.all.text.text"
        },
        {
          "type": "header",
          "content": "t:settings_schema.colors.name"
        },
        {
          "type": "color",
          "id": "heading_color",
          "default": "#000000",
          "label": "t:sections.all.text.color_heading_light"
        },
        {
          "type": "color",
          "id": "text_color_light",
          "default": "#000000",
          "label": "t:sections.all.text.color"
        },
        {
          "type": "color",
          "id": "heading_color_dark",
          "default": "#FFFFFF",
          "label": "t:sections.all.text.color_heading_dark"
        },
        {
          "type": "color",
          "id": "text_color_dark",
          "label": "t:sections.all.text.color_dark",
          "default": "#FFFFFF"
        }
      ]
    },
    {
      "type": "buttons",
      "name": "t:settings_schema.colors.settings.header__2.content",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "decline_button_label",
          "default": "Disagree",
          "label": "t:settings_schema.cookie_banner.settings.button_decline.label"
        },
        {
          "type": "url",
          "id": "decline_button_link",
          "label": "t:sections.age-verification-popup.blocks.buttons.settings.decline_button_link.label"
        },
        {
          "type": "checkbox",
          "id": "open_new_window",
          "default": false,
          "label": "t:sections.all.open_new_window.label"
        },
        {
          "type": "text",
          "id": "accept_button_label",
          "default": "Agree",
          "label": "t:settings_schema.cookie_banner.settings.button_accept.label"
        },
        {
          "type": "color",
          "id": "accept_button_background",
          "label": "t:sections.age-verification-popup.blocks.buttons.settings.accept_button_background.label",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "accept_button_text",
          "label": "t:sections.age-verification-popup.blocks.buttons.settings.accept_button_text.label",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "accept_button_hover",
          "label": "t:sections.age-verification-popup.blocks.buttons.settings.accept_button_hover.label",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "accept_button_text_hover",
          "label": "t:sections.age-verification-popup.blocks.buttons.settings.accept_button_text_hover.label",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "accept_button_background_dark",
          "label": "t:sections.age-verification-popup.blocks.buttons.settings.accept_button_background_dark.label",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "accept_button_text_dark",
          "label": "t:sections.age-verification-popup.blocks.buttons.settings.accept_button_text_dark.label",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "accept_button_hover_dark",
          "label": "t:sections.age-verification-popup.blocks.buttons.settings.accept_button_hover_dark.label",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "accept_button_text_hover_dark",
          "label": "t:sections.age-verification-popup.blocks.buttons.settings.accept_button_text_hover_dark.label",
          "default": "rgba(0,0,0,0)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.age-verification-popup.name",
      "category": "t:categories.utilities_and_layout",
      "blocks": [
        {
          "type": "content"
        },
        {
          "type": "buttons"
        }
      ]
    }
  ]
}
{% endschema %}
