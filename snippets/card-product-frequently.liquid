{% comment %}
    Renders a product card

    Accepts:
    - card_product: {Object} Product Liquid object (optional)
    - media_aspect_ratio: {String} Size of the product image card. Values are "square" and "portrait". Default is "square" (optional)
    - show_vendor: {Boolean} Show the product vendor. Default: false
    - show_rating: {Boolean} Show the product rating. Default: false
    - loading: {Boolean} Image should be lazy loaded. Default: lazy (optional)
    - section_id: {String} The ID of the section that contains this card.
    - list_name: {String} The title of collection,
    - full_width: {Boolean} Show section full width. Default: false
    Usage:
{% endcomment %}
 
{%- liquid
    if media_aspect_ratio == blank
      assign media_aspect_ratio = settings.product_image_ratio
    endif 
    assign ratio = 1 
    case media_aspect_ratio
      when "portrait"
        assign ratio = 1.5
      when "landscape"
        assign ratio = 0.75
      when "wide"
        assign ratio = 0.5625
      when "3/4"
        assign ratio = 1.33
    endcase
    assign show_rounded_image = false
    if settings.edges_type == 'rounded_corners'
      assign show_rounded_image = true
    endif
  
    assign can_show_preorder = false
    if settings.preorder_show == 'yes' or settings.preorder_show == 'on_backordered' and card_product.selected_or_first_available_variant.inventory_policy == 'continue' and card_product.selected_or_first_available_variant.inventory_quantity < 1 and card_product.selected_or_first_available_variant.inventory_management != nil
      if settings.applied_products_preorder == blank and settings.applied_collections_preorder == blank
        assign can_show_preorder = true
      else 
        assign list_product = ''
        for prod in settings.applied_products_preorder
          assign list_product = list_product | append: ';' | append: prod.id
        endfor 
        for collec in settings.applied_collections_preorder
          for prod in collec.products 
            assign list_product = list_product | append: ';' | append: prod.id
          endfor
        endfor
        if list_product contains card_product.id 
          assign can_show_preorder = true
        endif
      endif
    endif 

    unless disable_badges
      assign current_date = 'now' | date: '%s' 
      assign product_created_at = card_product.created_at | date: "%s"
      assign product_published_at = card_product.published_at | date: "%s"
      assign difference_in_seconds_created = current_date | minus: product_created_at
      assign difference_in_days_created = difference_in_seconds_created | times: 1.0 | divided_by: 86400 | round: 2
      assign difference_in_seconds_published = current_date | minus: product_published_at
      assign difference_in_days_published = difference_in_seconds_published | times: 1.0 | divided_by: 86400 | round: 2
    endunless

    if settings.lang_direction contains request.locale.iso_code
      assign is_rtl = true
    else
      assign is_rtl = false
    endif
  -%}
    {%- capture data_for_customer_event -%}
      {
        "product": {
          "title": "{{ card_product.title | escape }}",
          "listName": "{{ collection.title | default: list_name | escape }}",
          "sku": "{{ card_product.id }}",
          "currencyCode": "{{ cart.currency.iso_code }}",
          "price": {{ card_product.price }},
          "vendor": "{{ card_product.vendor | escape }}"
        }
      }
    {%- endcapture %}
    {%- unless disable_badges -%}
      {%- capture data_for_label -%}
        [
          {% for variant in card_product.variants %}
            {% liquid
              assign list_metafield_label = ''
              if settings.metafield_label != blank
                assign metafield_labels = settings.metafield_label | newline_to_br | strip_newlines | split: '<br />'
                for metafield_label in metafield_labels
                  assign mtf_key = metafield_label | remove: ' ' | split: '.'
                  assign mtf_value = variant.metafields[mtf_key.first][mtf_key.last]
                  if mtf_value == blank or mtf_value.type != 'single_line_text_field'
                    assign mtf_value = card_product.metafields[mtf_key.first][mtf_key.last]
                    if mtf_value != blank and mtf_value.type != 'single_line_text_field'
                      assign mtf_value = ''
                    endif
                  endif
                  if forloop.last
                    assign list_metafield_label = list_metafield_label | append: '"' | append: metafield_label | append: '":"' | append: mtf_value | append: '"'
                  else
                    assign list_metafield_label = list_metafield_label | append: '"' | append: metafield_label | append: '":"' | append: mtf_value | append: '",'
                  endif
                endfor
              endif        
            %}
            {
              "variant_id": {{ variant.id | default: card_product.id }},
              "product_id": {{ card_product.id }},    
              "available": {{ card_product.available }},
              "title": "{{ card_product.title | escape }}",
              "compare_at_price": {{ variant.compare_at_price | default: 0 }},
              "price": {{ variant.price }},
              "price_with_currency": "{% if settings.currency_code_enable %}{{ variant.price | money_with_currency | escape }}{% else %}{{ variant.price | money | escape }}{% endif %}",
              "sale_amount": "{{ variant.compare_at_price | minus: variant.price | money | strip_html }}",
              "collections": "||{{ card_product.collections | map: 'id' | join: '||' }}||",
              "inventory_management": "{{ variant.inventory_management }}",
              "qty": {{ variant.inventory_quantity | default: -1 }},
              "container": "card",
              "can_show_preorder": {{ can_show_preorder }},
              "diff_day_create": {{ difference_in_days_created }},
              "diff_day_publish": {{ difference_in_days_published }}
              {% if settings.metafield_label != blank %}
                ,"metafield_label": { 
                  {{ list_metafield_label }}
                }
              {% endif %}
            }{%- unless forloop.last -%},{%- endunless -%}
          {% endfor %}
        ]
      {%- endcapture %}
    {%- endunless -%}  
    {%- liquid 
      assign count_media = card_product.media | size
      if settings.number_of_additional_images < count_media
        assign count_media = settings.number_of_additional_images
      endif
    -%}
    <div class="card-product-fbt" id="card-product-fbt-{{ section_id }}">
      <div 
        {% if settings.swatches_type == 'both_text_and_color' %}
          x-data="xProductCard('{{ section_id }}', '{{ card_product.url | within: collection | split: "?" | first }}', '{{ card_product.id }}', '{{ card_product.featured_image }}')"  
        {% endif %}
        class="product-item h-full card-product overflow-hidden x-product-fbt-data flex flex-col relative z-10{% if settings.hide_cart %} pb-6 md:pb-7{% endif %} {% if show_rounded_image %} rounded-[10px]{% endif %}"
      >
        <a href="{{ card_product.url | within: collection }}" class="card block relative disable-effect">
          <div 
            {% unless disable_badges %} 
              x-data="{ lastWindowWidth: 0 }"
              id="{{ section.id }}-{{ card_product.id }}"
              x-intersect.once.margin.200px='$nextTick(() => {
                $store.xBadges?.load($el, () => {}, null, true);
              })'
              x-labels-data="{{ data_for_label | escape }}"
            {% endunless %} 
            class="group relative w-full z-0 cursor-pointer overflow-hidden{% if settings.product_image_type == "slide_img" and count_media > 1 and settings.show_arrow == false %} disable-label-hover{% endif %}">
            <div
              class="ltr block h-full"
              @click='$store.xCustomerEvent.fire("product_selected", $el)'
              x-customer-event-data="{{ data_for_customer_event | escape }}"
            >
              <div 
                x-data="xDoubleTouch('{{ card_product.url | within: collection }}')"
                class="w-full relative overflow-hidden before:h-0 before:block z-0
                  {%- if show_rounded_image %} rounded-[10px]{% endif -%}
                  {%- unless media_aspect_ratio == "natural" %} pb-[{{ ratio | times: 100.0 }}%]{% else %}{% if card_product.featured_media.media_type == "model" or card_product.featured_media == blank %} pb-[100%]{% endif %}{% endunless %}"
                {%- if media_aspect_ratio == "natural" and card_product.featured_media and card_product.featured_media.media_type != "model" %} style="height:0; padding-bottom: {{ 1 | divided_by: card_product.featured_media.aspect_ratio | times: 100 }}%;"{% endif -%}
              >
                <div
                  id="x-slideshow-card-product-{{ section_id }}-{{ product_card_id }}-{{ index | minus: 1 }}"
                  class="block h-full{% if settings.product_image_type == "slide_img" and count_media > 1 and class_slide != 'recommendations' %}{% unless media_aspect_ratio == "natural" %} card-product-img{% endunless %} top-0 left-0 absolute x-splide disable-effect-hover splide cursor-grab group{% endif %}" 
                  @click='$store.xCustomerEvent.fire("product_selected", $el)'
                  x-customer-event-data="{{ data_for_customer_event | escape }}"
                  {% if settings.product_image_type == "slide_img" and count_media > 1 and class_slide != 'recommendations' %}
                    x-intersect.once.margin.200px='$store.xSplide.load($el, {
                      "drag": false,
                      "pauseOnFocus": false,
                      "pauseOnHover": false,
                      "perMove": 1,
                      "focus": "center",
                      "type": "{% if settings.product_card_effect_reveal_image == 'slide' and settings.show_arrow %}slide{% else %}fade{% endif %}",
                      {%- unless settings.show_arrow -%} 
                        "cardHover": "image-product-{{ section_id }}-{{ product_card_id }}-{{ index | minus: 1 }}",
                        "maxSlide": "{{ count_media }}",
                        "arrows": false,
                        "classes": {
                          "pagination": "splide__pagination pagination-card hidden grid-cols-{{ count_media }} pointer-events-none absolute gap-1 top-5 pl-5 pr-5 w-full z-0",
                          "page": "button none_border btn-pagination flex items-center w-full h-1"
                        },
                      {% else %}
                        {% if settings.change_slides_speed > 0 %}
                          "rewind": true,
                          "autoplay": true,
                          "speed": {% if settings.product_card_effect_reveal_image == 'fade' %}{{ settings.change_slides_speed | times: 1000 }}{% else %}1000{% endif %},
                          "interval": {{ settings.change_slides_speed | times: 1000 }},
                          "updateOnMove": "true",
                          "playOnHover": true,
                        {% endif %}
                        "pagination": false,
                      {%- endunless %}
                      "events": [
                        {
                          "event": "ready",
                          "callback": () => {
                            document.dispatchEvent(new CustomEvent("eurus:{{ section_id }}:splide-ready"));
                          }
                        }
                      ]
                    })'
                  {%- endif -%}
                >
                  {%- if settings.product_image_type != 'none' -%}
                    <div 
                      class="absolute inset-0 z-10 pointer-events-auto dbtap-overlay"
                      @touchstart="onTouchStart($event)"
                      @touchend.prevent="onTouchEnd($el.closest('.x-splide'){% if settings.product_image_type == "slide_img" and count_media > 1 and class_slide != 'recommendations' %}, true{% endif %})"
                      @touchmove="onTouchMove($event)"
                    ></div>
                  {%- endif -%}
                  {% if settings.product_image_type == "slide_img" and count_media > 1 and class_slide != 'recommendations' %}
                    <div
                      id="image-product-{{ section_id }}-{{ product_card_id }}-{{ index | minus: 1 }}"
                      class="splide__track overflow-hidden max-h-full h-full w-full">
                      <div class="w-full h-full splide__list">
                  {%- endif -%}
                  {%- if card_product.featured_media -%}
                    {%- capture sizes -%}
                      {%- if collage -%}
                        {%- if full_width -%}
                          (min-width: 768px) {{ columns_desktop | times: 100 | divided_by: max_columns }}vw, {{ columns_mobile | times: 100 | divided_by: min_columns_mobile }}vw
                        {%- else -%}
                          (min-width: {{ settings.page_width }}px) {{ settings.page_width | times: columns_desktop | divided_by: max_columns }}px, {{ columns_mobile | times: 100 | divided_by: min_columns_mobile }}vw
                        {%- endif -%}
                      {%- else -%}
                        (min-width: {{ settings.page_width }}px) {% if enable_desktop_slider %}{{ settings.page_width | plus: 100 | divided_by: columns_desktop }}px{% else %}calc(100vw / {{ columns_desktop }}){% endif %}, (min-width: 1024px) calc((100vw) / {{ columns_desktop }}), (min-width: 768px) calc((100vw) / 2), calc(100vw /{{ column_mobile }})
                      {%- endif -%}
                    {%- endcapture -%}
                    {%- if loading == 'eager' -%}
                      <div class="hidden">
                        {% assign featured_media_alt = card_product.featured_media.alt | split: "#" | first | escape %}
                        {{ card_product.featured_media | image_url: width: 1500 | image_tag: widths: '375, 450, 750, 900, 1100, 1500', preload: true, loading: 'lazy', sizes: sizes, alt: featured_media_alt }}
                      </div>
                    {%- endif -%}
                    <div class="w-full{% if media_aspect_ratio != "natural" %} h-full min-h-full{% endif %}{% if settings.product_image_type != "slide_img" or count_media <= 1 or class_slide == 'recommendations' %} top-0 left-0 absolute{% else %} overflow-hidden splide__slide x-splide-slide max-h-full{% endif %} duration-300 z-0 transition ease-out">
                      {% # theme-check-disable ImgLazyLoading %}
                      <picture>
                        <img
                          srcset="{{ card_product.featured_media | image_url: width: 450 }} 450w,
                            {{ card_product.featured_media | image_url: width: 750 }} 750w,
                            {{ card_product.featured_media | image_url: width: 900 }} 900w,
                            {{ card_product.featured_media | image_url: width: 1100 }} 1100w,
                            {{ card_product.featured_media | image_url: width: 1500 }} 1500w
                            {%- if card_product.featured_media.width %},{{ card_product.featured_media | image_url }} {{ card_product.featured_media.width }}w{% endif %}" 
                          src="{{ card_product.featured_media | image_url: width: 1500 }}"
                          sizes="{{ sizes }}"
                          alt="{{ card_product.featured_media.alt | split: "#" | first | escape }}"
                          :class="showSecond ? 'first-img' : ''"
                          class="w-full h-full preview-img motion-reduce aspect-{{ media_aspect_ratio }} relative object-cover
                            {%- if card_product.media[1] != nil and settings.product_image_type == 'hover_to_reveal_second_image' and settings.product_card_effect_reveal_image != 'slide' %} image-first-hover lg:group-hover:opacity-0
                              {%- elsif card_product.media[1] != nil and settings.product_image_type == 'hover_to_reveal_second_image' and settings.product_card_effect_reveal_image == 'slide' %} image-first-slide-anm lg:group-hover:opacity-0
                              {%- elsif settings.product_image_type != 'slide_img' %} image-hover
                            {%- endif -%}
                            {%- if animation_loading %} animate_transition_image{% endif -%}
                          "
                          {% if settings.enable_lazy_loading_image %}loading="lazy"{% else %}loading="eager"{% endif %}
                          onload="this?.classList.add('active')"
                          width="{{ card_product.featured_media.width }}"
                          height="{{ card_product.featured_media.height }}"
                        />
                      </picture>
                      {% # theme-check-enable ImgLazyLoading %}
                    </div>
                    {%- if card_product.media[1] != nil -%}
                      {%- if settings.product_image_type == "hover_to_reveal_second_image" -%}
                        <div class="w-full h-full top-0 left-0 absolute duration-300 z-0 transition ease-out">
                          {% # theme-check-disable ImgLazyLoading %}
                          <picture>
                            <img
                              srcset="{{ card_product.media[1] | image_url: width: 450 }} 450w,
                                {{ card_product.media[1] | image_url: width: 750 }} 750w,
                                {{ card_product.media[1] | image_url: width: 900 }} 900w,
                                {{ card_product.media[1] | image_url: width: 1100 }} 1100w,
                                {{ card_product.media[1] | image_url: width: 1500 }} 1500w
                                {%- if card_product.media[1].width %},{{ card_product.media[1] | image_url }} {{ card_product.media[1].width }}w{% endif %}"
                              src="{{ card_product.media[1] | image_url: width: 1500 }}"
                              sizes="{{ sizes }}"
                              alt="{{ card_product.media[1].alt | split: "#" | first | escape }}"
                              :class="showSecond ? 'second-img' : ''"
                              class="motion-reduce min-w-full h-full object-cover lg:group-hover:cursor-pointer
                                {%- if media_aspect_ratio == "natural" %} aspect-auto{% endif -%}
                                {%- if settings.product_card_effect_reveal_image == 'fade' %} image-second-hover opacity-0 lg:group-hover:opacity-100{% endif -%}
                                {%- if settings.product_card_effect_reveal_image == 'slide' %} image-first-hover-slide-anm absolute top-0 -right-[101%]{% endif -%}
                              "
                              {% if settings.enable_lazy_loading_image %}loading="lazy"{% else %}loading="eager"{% endif %}
                              width="{{ card_product.media[1].width }}"
                              height="{{ card_product.media[1].height }}"
                            />
                          </picture>
                          {% # theme-check-enable ImgLazyLoading %}
                        </div>
                      {%- elsif settings.product_image_type == "slide_img" and count_media > 1 and class_slide != 'recommendations' -%}
                          {% for media in  card_product.media %}
                            {%- if forloop.index > 1 -%}
                              <div
                                index="{{ forloop.index0 }}" 
                                media="{{ media | image_url }}"
                                class="w-full splide__slide x-splide-slide duration-300 z-0 transition ease-out{% if media_aspect_ratio != "natural" %} h-full min-h-full{% endif %}"
                              >
                                {% # theme-check-disable ImgLazyLoading %}
                                <picture>
                                  <img
                                    srcset="{{ media | image_url: width: 450 }} 450w,
                                      {{ media | image_url: width: 750 }} 750w,
                                      {{ media | image_url: width: 900 }} 900w,
                                      {{ media | image_url: width: 1100 }} 1100w,
                                      {{ media | image_url: width: 1500 }} 1500w
                                      {% if media.width %},{{ media | image_url }} {{ media.width }}w{% endif %}"
                                    src="{{ media | image_url: width: 1500 }}"
                                    sizes="{{ sizes }}"
                                    alt="{{ media.alt | split: "#" | first | escape }}"
                                    class="w-full motion-reduce{% if media_aspect_ratio == "natural" %} aspect-auto{% else %} h-full min-h-full{% endif %} object-cover"
                                    {% if settings.enable_lazy_loading_image %}loading="lazy"{% else %}loading="eager"{% endif %}
                                    width="{{ media.width }}"
                                    height="{{ media.height }}"
                                  />
                                </picture>
                                {% # theme-check-enable ImgLazyLoading %}
                              </div>
                            {% endif %}
                            {% liquid 
                              if forloop.index == count_media
                                break 
                              endif
                            %}
                          {% endfor %} 
                      {%- endif -%}
                    {%- endif -%}
                  {%- else -%} 
                    <div class='bg-[#c9c9c9] flex justify-center absolute top-0 left-0 w-full h-full items-center'>
                      {%- render 'icon-placeholder', icon: 'icon-product', class: 'w-full h-full' %}
                    </div>
                  {%- endif -%}
                  {% if settings.product_image_type == "slide_img" and count_media > 1 and class_slide != 'recommendations' %}
                      </div>
                    </div>
                    {%- if settings.show_arrow -%}
                      <div class="splide__arrows lg:inline-flex hidden">
                        <button @click.prevent="prev = true" class="text-[rgba(var(--colors-transition-arrows))] splide__arrow splide__arrow--prev disable-effect-hover hidden group-hover:lg:block absolute none_border z-30 {% if settings.icon_options == "modern" %}w-[60px]{% else %}w-11{% endif %} h-1/2 rounded-full after:text-[20px] pl-4.5 pr-4 top-1/2 -translate-y-1/2 duration-100 opacity-60 hover:opacity-100 disabled:opacity-40 disabled:cursor-not-allowed left-0 rotate-180" aria-label="previous slide">
                          {% render 'icon-alls', icon: 'icon-transition-arrow' %}
                        </button>
                        <button @click.prevent="next = true" class="text-[rgba(var(--colors-transition-arrows))] splide__arrow splide__arrow--next disable-effect-hover hidden group-hover:lg:block absolute none_border z-30 {% if settings.icon_options == "modern" %}w-[60px]{% else %}w-11{% endif %} h-1/2 rounded-full after:text-[20px] pl-4.5 pr-4 top-1/2 -translate-y-1/2 duration-100 opacity-60 hover:opacity-100 disabled:opacity-40 disabled:cursor-not-allowed right-0" aria-label="next slide">
                          {% render 'icon-alls', icon: 'icon-transition-arrow' %}
                        </button>
                      </div>
                    {%- endif -%}
                  {%- endif -%}
                </div>
              </div>
            </div>
          </div>
        </a>
    
        {% comment %} handle select product variant {% endcomment %}
        {%- liquid
          assign product_form_id = 'product-form-' | append: section_id
          assign is_cbl = false
          if settings.enable_combined
            assign is_cbl = true
          endif
        -%}
        <div id="product-fbt-{{ card_product.id }}" 
          class="grow"
          x-data="xProductItemFBT($el, '{{ section_id }}', '{{ section.id }}', '{{ card_product.url | within: collection }}', '{{ card_product.id }}',{% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %})"
        >
          <div 
            id="x-product-template-{{ card_product.id }}-{{ section_id }}"
            class="flex flex-col h-full justify-between"
          >
            <div class="card-info pt-4 lg:pt-6 w-full block text-{{ settings.info_alignment_card_product }}">
              <div id="featured-image-{{ section_id }}" class="featured-image hidden">
                {%- if card_product.featured_media -%}{{ card_product.featured_media | image_url: width: 375 }}{%- endif -%}
              </div>
              {% if show_highlighted_features and settings.highlighted_features_position == "top_card" %}
                {% render 'highlighted-features', card_product: card_product %}
              {% endif %}
              <div class="below-image ltr flex flex-wrap justify-{{ settings.info_alignment_card_product }} gap-1 mb-2 empty:hidden"></div>
              {%- if show_vendor -%}
                <div class="vendor mb-0.5 uppercase tracking-widest text-small p-break-words">{{ card_product.vendor }}</div>
              {%- endif -%}
              <div class="w-full">
                <h3 class="card__heading h5 collection-title mb-3 leading-tight">
                  <a
                    id="product-name-{{ section_id }}"
                    class="x-card-title full-unstyled-link product-name text-[rgba(var(--colors-heading))] hover:text-[rgba(var(--colors-text-link))] cursor-pointer duration-200 p-break-words"
                    @click='$store.xCustomerEvent.fire("product_selected", $el)'
                    x-customer-event-data="{{ data_for_customer_event | escape }}"
                    href="{{ card_product.url }}"
                  >
                    {{ card_product.title | escape }}
                  </a>
                </h3>
              </div>
              {% if show_highlighted_features and settings.highlighted_features_position == "below_title" %}
                {% render 'highlighted-features', card_product: card_product %}
              {% endif %}
              {%- if show_rating -%}
                <div class="rating-fbt">
                  {% render 'review-product', product: card_product, content_alignment: settings.info_alignment_card_product, card_product: true %}
                </div>
                <div class="rating-fbt-mini hidden">
                  {% if is_rtl %}
                    {% render 'review-product', product: card_product, card_product: true, content_alignment: 'right' %}
                  {% else %}
                    {% render 'review-product', product: card_product, card_product: true, content_alignment: 'left' %}
                  {% endif %}
                </div>
              {%- endif -%}
              {%- unless card_product.has_only_default_variant -%}
                <div class="text-{{ settings.info_alignment_card_product }}">
                  <div id="price-{{ section_id }}" class="x-card-price price flex items-center flex-wrap gap-x-1 mb-3 gap-y-1.5{% if settings.info_alignment_card_product == 'right' %} flex-row-reverse rtl:flex-row{% else %} justify-{{ settings.info_alignment_card_product }} rtl:flex-row-reverse{% endif %}" role="status">
                    {% render 'price', product: card_product %}
                    <div class="next-price mb-1 empty:hidden"></div>
                  </div>
                  {% if show_highlighted_features and settings.highlighted_features_position == "below_price" %}
                    {% render 'highlighted-features', card_product: card_product %}
                  {% endif %}
                  <div id="x-availability-notice-{{ section.id }}" class="flex items-center flex-wrap gap-1{% unless settings.info_alignment_card_product == 'right' %} justify-{{ settings.info_alignment_card_product }} rtl:flex-row-reverse md:rtl:list-layout:flex-row md:list-layout:justify-start{% endunless %}{% if settings.info_alignment_card_product == 'right' %} flex-row-reverse rtl:flex-row md:list-layout:flex-row{% endif %}" x-show="$store.xStoreSelector?.canShow('{{ card_product.id }}', [{{ card_product.collections | map: 'id' | join: ', ' }}])">
                    {%- render 'availability-notice',
                      product: card_product
                    -%}
                  </div>
                  {%- if is_cbl -%}
                    <div
                      class="x-variants-data"
                      x-data="xVariantSelect($el,'{{ section_id }}', false, '{{ 'products.product.unavailable' | t }}', '{{ card_product.url }}', '{{ card_product.id }}', false, false, true, '{{ section.id }}','', {{ page_param }}, '{{ card_product.featured_media | image_url | default: "" }}')"
                      data-url="{{ card_product.url }}"
                    >
                      <div
                        id="current-variant-{{ section_id }}" 
                        class="current-variant hidden" 
                      > 
                        {{ card_product.selected_or_first_available_variant | json }}
                      </div>
                      <div
                        id="variant-update-{{ section_id }}"
                        class="variant-update-{{ section_id }} mt-3"
                      >
                        {%- for option in card_product.options_with_values -%}
                          {%- assign option_index = forloop.index | minus: 1 -%}
                          {%- assign variant_key = 'option' | append: option.position -%}
                            <fieldset
                              id="Option-{{ section_id }}-{{ forloop.index0 }}"
                              class="product-form__input pl-0{% unless forloop.last %} pb-3{% endunless %} quick-view:pb-2 eurus gap-x-2"
                            >
                              <div class="mb-2">{{ option.name }}</div>
                              <div class="inline-flex gap-x-1 flex-wrap items-center justify-{{ settings.info_alignment_card_product }}">
                                {%- liquid
                                
                                  assign color_option_values = settings.color_option_values | newline_to_br | strip_newlines | split: '<br />'

                                  if settings.products_color_swatches_style == 'round' 
                                    assign class_swatch = ' rounded-full before:rounded-full'
                                  endif
                                  assign swatch_natural = false     
                                  if settings.products_color_swatches_style == 'natural'
                                    assign swatch_natural = true
                                  endif
                                  assign ratio_image = false
                                -%}
                                {%- for value in option.values -%}
                                  {%- liquid
                                    assign preview_image = blank
                                    assign variant_value = card_product.variants | where: variant_key, value | first
                                    if variant_value.featured_media.preview_image
                                      assign preview_image = variant_value.featured_media.preview_image
                                      unless ratio_image
                                        assign ratio_image = 1 | divided_by: variant_value.featured_media.preview_image.aspect_ratio | times: 100
                                      endunless
                                    elsif card_product.featured_media
                                      assign preview_image = card_product.featured_media
                                      unless ratio_image
                                        assign ratio_image = 1 | divided_by: card_product.featured_media.aspect_ratio | times: 100
                                      endunless
                                    endif

                                    assign option_disabled = true
                                    if value.available
                                      assign option_disabled = false
                                    endif
                                  -%}
                                  {%- capture input_id -%}{{ section_id }}-{{ option.position }}-{{ forloop.index0 -}}-{{ card_product.id }}{%- endcapture -%}
                                
                                  {%- capture input_name -%}{{ option.name }}-{{ option.position }}{%- endcapture -%}
                                
                                  {%- capture input_dataset -%}
                                    data-available="{{ value.available }}"
                                    data-product-url="{{ value.product_url }}"
                                    data-option-value-id="{{ value.id }}"
                                  {%- endcapture -%}
                                  {%- liquid
                                    assign color_custom = ''
                                    assign swatch_image = false
                                    assign color_value = ''
                                    
                                    for color_option_value in color_option_values reversed
                                      assign option_key = color_option_value | split: ':' | first
                                      assign option_value = color_option_value | split: ':' | last | strip
                              
                                      if option_key == value and option_value contains '.'
                                        assign color_custom = option_key
                                        assign swatch_image = true
                                        assign color_value = option_value
                                        break
                                      endif
                                      assign multi_colors = option_value | remove_first: '#' | split: '#'
                                      if option_key == value
                                        assign color_custom = option_key
                                        assign color_value = option_value
                                        break
                                      endif
                                    endfor  
                                  -%}
                                  {% if preview_image and settings.replace_color_with_variant_images %}
                                    {%- style %}
                                    .color-watches.variant-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}:before {
                                        background-image: url({{ preview_image | image_url: width: 100, height: 100 }});
                                      }
                                    {%- endstyle %}  
                                  {% elsif color_custom != '' %}
                                    {%- style %}
                                      {% if swatch_image %}
                                        [data-swatch="{{ color_custom }}"]:before {
                                          background-image: url({{ color_value | file_img_url: "100x100" }});
                                        }
                                      {% elsif multi_colors.size == 3 %}
                                        [data-swatch="{{ color_custom }}"]:before {
                                          background: linear-gradient(45deg, {{ '#' | append: multi_colors[0] }}, {{ '#' | append: multi_colors[0] }} 33.3%, {{ '#' | append: multi_colors[1] }} 33.3%, {{ '#' | append: multi_colors[1] }} 66.6%, {{ '#' | append: multi_colors[2] }} 66.6%, {{ '#' | append: multi_colors[2] }});
                                        }
                                      {% elsif multi_colors.size == 2 %}
                                        [data-swatch="{{ color_custom }}"]:before {
                                          background: linear-gradient(45deg, {{ '#' | append: multi_colors[0] }}, {{ '#' | append: multi_colors[0] }} 50%, {{ '#' | append: multi_colors[1] }} 50%, {{ '#' | append: multi_colors[1] }});
                                        }
                                      {% else %}
                                        [data-swatch="{{ color_custom }}"]:before {
                                          background: {{ color_value }};
                                        }
                                      {% endif %}
                                    {%- endstyle %}
                                  {% endif %}
                                  <input 
                                    id="{{ input_id }}"
                                    {{ input_dataset }}
                                    type="radio"
                                    name="{{ input_name }}-{{ index }}"
                                    section-id="{{ section_id }}"
                                    option-pos="{{ option.position }}"
                                    forloop="{{ forloop.index0 }}"
                                    value="{{ value | escape | replace: '&lt;', '\u003c' | replace: '&gt;', '\u003e' }}"
                                    form="{{ product_form_id }}"
                                    class="absolute opacity-0 h-1 w-1 input-radio{% if option_disabled %} disabled{% endif %}"
                                    aria-label="{{ value | escape }}"
                                    @change="updateVariantSelector('{{ input_id }}', '{{ value.product_url }}')"
                                    {% if value.selected %}
                                      checked
                                    {% endif %}
                                  >
                                  {% if settings.products_color_swatches_enable_on_collection_page and settings.color_option_name contains option.name and settings.swatches_type != 'text' %}
                                    <label 
                                      class="color-watches variant-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }} cursor-pointer mb-2 inline-flex ml-0.5 rtl:mr-0.5{% if swatch_natural and settings.replace_color_with_variant_images and ratio_image %} color-swatch-natural{% endif %} swatch-{{ settings.swatch_size }} relative{{ class_swatch }}" 
                                      for="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}" 
                                      data-swatch="{{ color_custom }}"
                                      {% if preview_image == blank or settings.replace_color_with_variant_images == false and color_custom == '' %}
                                        {% liquid
                                          if value.swatch.image
                                            assign image_url = value.swatch.image | image_url: width: 50
                                            assign swatch_value = 'url(' | append: image_url | append: ')'
                                          elsif value.swatch.color
                                            assign swatch_value = 'rgb(' | append: value.swatch.color.rgb | append: ')'
                                          else
                                            assign swatch_value = value | split: ' ' | last | handle
                                          endif
                                        %}    
                                        style="background: {{ swatch_value }};"
                                      {% elsif swatch_natural and ratio_image %}
                                        style="--ratio-image: {{ ratio_image }}%;"
                                      {% endif %}
                                      tabindex="0"
                                      aria-label="{{ value | escape }}"
                                    >
                                      <span class="h-full w-full color-watches-disable"></span>
                                    </label>
                                  {% else %}
                                    <label class="flex items-center outline-none font-medium text-[13px] cursor-pointer mb-2 ml-0.5 rtl:mr-0.5 pl-3.5 pr-3.5 pt-1.5 pb-1.5 border bg-[rgba(var(--background-color),1)]
                                      {% if rounded_corner %} rounded-md{% endif %}" for="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                    >
                                      <span class="p-break-words">{{ value | escape }}</span>
                                    </label>
                                  {% endif %}
                                  <script type="application/json" data-resource="{{ input_id }}">
                                    {{ value.variant | json }}
                                  </script>
                                {%- endfor -%}
                              </div>
                            </fieldset>
                        {%- endfor -%}
                      </div>
                    </div>
                  {%- else -%}
                    <div
                      class="x-variants-data"
                      x-data="xVariantSelect($el,'{{ section_id }}', false, '{{ 'products.product.unavailable' | t }}', '{{ card_product.url }}', '{{ card_product.id }}', false, false, true, '{{ section.id }}', '', '', '{{ card_product.featured_media | image_url | default: "" }}')"
                      x-init="initVariant($el)"
                    >
                      <script type="application/json">
                        {{ card_product.variants | json }}
                      </script>
                      <div
                        id="current-variant-{{ section_id }}" 
                        class="current-variant hidden" 
                        x-text="(currentVariant && JSON.stringify(currentVariant)) || {{ card_product.selected_or_first_available_variant.id }}"
                      >
                      </div>
                      <div
                        id="variant-update-{{ section_id }}"
                        class="variant-update-{{ section_id }} options-container"
                      >
                        {%- for option in card_product.options_with_values -%}
                          {%- assign variant_key = 'option' | append: option.position -%}
                          {%- assign option_index = forloop.index | minus: 1 -%}
                            {% if picker_type == 'button' %}
                              <fieldset
                                id="Option-{{ section_id }}-{{ forloop.index0 }}"
                                class="product-form__input pl-0{% unless forloop.last %} pb-3{% endunless %} quick-view:pb-2 eurus gap-x-2"
                                x-intersect.once.margin.200px="options[{{ forloop.index | minus: 1 }}] = document.querySelector('#Option-{{ section_id }}-{{ forloop.index0 }} input[checked]').value"
                              >
                                <div class="mb-2">{{ option.name }}</div>
                                <div class="inline-flex ltr flex-wrap justify-{{ settings.info_alignment_card_product }}{% if settings.color_option_name contains option.name %} gap-x-2{% else %} gap-x-1.5{% endif %}">
                                  {%- liquid
                                    assign variants_available_arr = card_product.variants | map: 'available'
                                    assign variants_option_1_arr = card_product.variants | map: 'option1'
                                    assign variants_option_2_arr = card_product.variants | map: 'option2'
                                    assign variants_option_3_arr = card_product.variants | map: 'option3'
                                  
                                    assign color_option_values = settings.color_option_values | newline_to_br | strip_newlines | split: '<br />'
      
                                    if settings.products_color_swatches_style == 'round' 
                                      assign class_swatch = ' rounded-full before:rounded-full'
                                    elsif settings.edges_type == 'rounded_corners'
                                      assign class_swatch = ' rounded-md overflow-hidden'
                                    endif
                                    assign swatch_natural = false     
                                    if settings.products_color_swatches_style == 'natural'
                                      assign swatch_natural = true
                                    endif
                                    assign ratio_image = false
                                  -%}
                                  {%- for value in option.values -%}
                                    {%- liquid
                                      assign preview_image = blank
                                      assign variant_value = card_product.variants | where: variant_key, value | first
                                      if variant_value.featured_media.preview_image
                                        assign preview_image = variant_value.featured_media.preview_image
                                        unless ratio_image
                                          assign ratio_image = 1 | divided_by: variant_value.featured_media.preview_image.aspect_ratio | times: 100
                                        endunless
                                      elsif card_product.featured_media
                                        assign preview_image = card_product.featured_media
                                        unless ratio_image
                                          assign ratio_image = 1 | divided_by: card_product.featured_media.aspect_ratio | times: 100
                                        endunless
                                      endif
                                      assign option_disabled = true
                                  
                                      for option1_name in variants_option_1_arr
                                        case option.position
                                          when 1
                                            if variants_option_1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                              assign option_disabled = false
                                            endif
                                          when 2
                                            if option1_name == card_product.selected_or_first_available_variant.option1 and variants_option_2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                              assign option_disabled = false
                                            endif
                                          when 3
                                            if option1_name == card_product.selected_or_first_available_variant.option1 and variants_option_2_arr[forloop.index0] == card_product.selected_or_first_available_variant.option2 and variants_option_3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                              assign option_disabled = false
                                            endif
                                        endcase
                                      endfor
                                    -%}
                                
                                    {%- liquid
                                      assign color_custom = ''
                                      assign swatch_image = false
                                      assign color_value = ''
                                      for color_option_value in color_option_values reversed
                                        assign option_key = color_option_value | split: ':' | first
                                        assign option_value = color_option_value | split: ':' | last | strip
                                
                                        if option_key == value and option_value contains '.'
                                          assign color_custom = option_key
                                          assign swatch_image = true
                                          assign color_value = option_value
                                          break
                                        endif
                                        assign multi_colors = option_value | remove_first: '#' | split: '#'
                                        if option_key == value
                                          assign color_custom = option_key
                                          assign color_value = option_value
                                          break
                                        endif
                                      endfor  
                                    -%}
                                    {% if preview_image and settings.replace_color_with_variant_images %}
                                      {%- style %}
                                      .color-watches.variant-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}:before {
                                          background-image: var(--bg-image);
                                        }
                                      {%- endstyle %}  
                                    {% elsif color_custom != '' %}
                                      {%- style %}
                                        {% if swatch_image %}
                                          [data-swatch="{{ color_custom }}"]:before {
                                            background-image: url({{ color_value | file_img_url: "100x100" }});
                                          }
                                        {% elsif multi_colors.size == 3 %}
                                          [data-swatch="{{ color_custom }}"]:before {
                                            background: linear-gradient(45deg, {{ '#' | append: multi_colors[0] }}, {{ '#' | append: multi_colors[0] }} 33.3%, {{ '#' | append: multi_colors[1] }} 33.3%, {{ '#' | append: multi_colors[1] }} 66.6%, {{ '#' | append: multi_colors[2] }} 66.6%, {{ '#' | append: multi_colors[2] }});
                                          }
                                        {% elsif multi_colors.size == 2 %}
                                          [data-swatch="{{ color_custom }}"]:before {
                                            background: linear-gradient(45deg, {{ '#' | append: multi_colors[0] }}, {{ '#' | append: multi_colors[0] }} 50%, {{ '#' | append: multi_colors[1] }} 50%, {{ '#' | append: multi_colors[1] }});
                                          }
                                        {% else %}
                                          [data-swatch="{{ color_custom }}"]:before {
                                            background: {{ color_value }};
                                          }
                                        {% endif %}
                                      {%- endstyle %}
                                    {% endif %}
                                    <input 
                                      id="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                      section-id="{{ section_id }}"
                                      option-pos="{{ option.position }}"
                                      forloop="{{ forloop.index0 }}"
                                      type="radio"
                                      name="{{ option.name }}-{{ block_id }}"
                                      value="{{ value | escape | replace: '&lt;', '\u003c' | replace: '&gt;', '\u003e' }}"
                                      form="{{ product_form_id }}"
                                      class="absolute opacity-0 h-1 w-1 input-radio"
                                      {% if settings.swatches_type == 'both_text_and_color' and card_product.options_with_values.size > 1 %}
                                        x-on:change="setTimeout(() => { $store.xBadges && $store.xBadges.load(document.getElementById('{{ section.id }}-{{ card_product.id }}'), () => {}, null, true);$store.xPreviewColorSwatch.onChangeVariant($el,'{{ card_product.url | within: collection | split: "?" | first }}', '{{ card_product.featured_media | image_url | default: "" }}', {{ variant_value.id | default: "" }}, '{{ section_id }}', {% if settings.color_option_name contains option.name %}true{% endif %}) }, 0)"
                                      {% elsif settings.swatches_type == 'color' and card_product.options_with_values.size > 1 %}
                                        x-on:change="setTimeout(() => { $store.xBadges && $store.xBadges.load(document.getElementById('{{ section.id }}-{{ card_product.id }}'), () => {}, null, true);$store.xPreviewColorSwatch.onChangeVariant($el,'{{ card_product.url | within: collection | split: "?" | first }}', '{{ card_product.featured_media | image_url | default: "" }}', {{ variant_value.id | default: "" }}, '{{ section_id }}', {% if settings.color_option_name contains option.name %}true{% endif %}) }, 0)"
                                      {% else %}
                                        x-on:change="setTimeout(() => { $store.xBadges && $store.xBadges.load(document.getElementById('{{ section.id }}-{{ card_product.id }}'), () => {}, null, true);$store.xPreviewColorSwatch.updateImage($el,'{{ card_product.url | within: collection | split: "?" | first }}', '{{ preview_image | image_url | default: "" }}', {{ variant_value.id }}, '', {% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %}) }, 0)"
                                      {% endif %}              
                                      {% if option_index > 0 %}:class="{'disabled': !currentAvailableOptions[{{ option_index }}] || !currentAvailableOptions[{{ option_index }}].includes(`{{ value | escape }}`)}"{% endif %}
                                      x-model="options[{{ option_index }}]"
                                      aria-label="{{ value | escape }}"
                                      {% if option.selected_value == value %}checked{% endif %}
                                    >
                                    {% if settings.color_option_name contains option.name and settings.swatches_type != 'text' %}
                                      <label 
                                        class="color-watches variant-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }} cursor-pointer mb-2 block ml-0.5 rtl:mr-0.5 rtl:ml-1.5{% if swatch_natural and settings.replace_color_with_variant_images and ratio_image %} color-swatch-natural{% endif %} swatch-{{ settings.swatch_size }} relative{{ class_swatch }}" 
                                        for="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}" 
                                        data-swatch="{{ color_custom }}"
                                        data-optionindex="{{ option_index }}"
                                        data-optionvalue="{{ value | escape | replace: '&lt;', '\u003c' | replace: '&gt;', '\u003e' }}"              
                                        {% if preview_image == blank or settings.replace_color_with_variant_images == false and color_custom == '' %}
                                          {% liquid
                                            if value.swatch.image
                                              assign image_url = value.swatch.image | image_url: width: 50
                                              assign swatch_value = 'url(' | append: image_url | append: ')'
                                            elsif value.swatch.color
                                              assign swatch_value = 'rgb(' | append: value.swatch.color.rgb | append: ')'
                                            else
                                              assign swatch_value = value | split: ' ' | last | handle
                                            endif
                                          %}    
                                          style="background: {{ swatch_value }};"
                                        {% elsif swatch_natural and ratio_image %}
                                          style="--ratio-image: {{ ratio_image }}%; --bg-image: url('{{ preview_image | image_url: width: 100, height: 100 }}')"
                                        {% else %}
                                          style="--bg-image: url('{{ preview_image | image_url: width: 100, height: 100 }}')"
                                        {% endif %}
                                        tabindex="0"
                                        aria-label="{{ value | escape }}"
                                      >
                                        <span class="h-full w-full color-watches-disable"></span>
                                      </label>
                                    {% else %}
                                      <label class="flex items-center outline-none font-medium text-[13px] cursor-pointer mb-2 rtl:mr-0 rtl:ml-1.5 pl-3.5 pr-3.5 pt-1.5 pb-1.5 border bg-[rgba(var(--background-color),1)]
                                        {% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}" for="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                      >
                                        <span class="p-break-words">{{ value | escape }}</span>
                                      </label>
                                    {% endif %}
                                  {%- endfor -%}
                                </div>
                              </fieldset>
                            {% else %}
                              <div 
                                data-option-name="{{ option.name | handle }}"
                                data-option-index="{{ forloop.index | minus: 1 }}"
                                x-intersect.once.margin.200px="options[{{ forloop.index | minus: 1 }}] = document.getElementById('Option-{{ section_id }}-{{ forloop.index0 }}').value"
                              >
                                
                                <label class="mt-1 mb-1 font-medium" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                                  {{ option.name }}
                                </label>
                                <div class="select relative outline-none eurus">
                                  <select
                                    id="Option-{{ section_id }}-{{ forloop.index0 }}"
                                    class="product-form__input w-full capitalize pt-2.5 pb-2.5 pl-5 pr-8 rtl:pr-5 rtl:pl-8 mt-2 mb-2 bg-transparent focus:border-current border appearance-none outline-none border-solid focus-visible:outline-none cursor-pointer{% if settings.edges_type == 'rounded_corners' %} !rounded-md{% endif %}"
                                    name="{{ option.name }}"
                                    form="{{ product_form_id }}"
                                    x-model="options[{{ option_index }}]"
                                  > 
                                    {%- liquid
                                      assign variants_available_arr = card_product.variants | map: 'available'
                                      assign variants_option_1_arr = card_product.variants | map: 'option1'
                                      assign variants_option_2_arr = card_product.variants | map: 'option2'
                                      assign variants_option_3_arr = card_product.variants | map: 'option3'
                                    -%}
                                    {%- for value in option.values -%}
                                      {%- liquid
                                        assign preview_image = blank
                                        assign variant_value = card_product.variants | where: variant_key, value | first
                                        if variant_value.featured_media.preview_image
                                          assign preview_image = variant_value.featured_media.preview_image | image_url: width: 100, height: 100
                                        elsif card_product.featured_media
                                          assign preview_image = card_product.featured_media | image_url: width: 100, height: 100
                                        endif
                                        assign option_disabled = true
                                        
                                        for option1_name in variants_option_1_arr
                                          case option.position
                                            when 1
                                              if variants_option_1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                                assign option_disabled = false
                                              endif
                                            when 2
                                              if option1_name == card_product.selected_or_first_available_variant.option1 and variants_option_2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                                assign option_disabled = false
                                              endif
                                            when 3
                                              if option1_name == card_product.selected_or_first_available_variant.option1 and variants_option_2_arr[forloop.index0] == card_product.selected_or_first_available_variant.option2 and variants_option_3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                                assign option_disabled = false
                                              endif
                                          endcase
                                        endfor
                                      -%}
                                      <option
                                        value="{{ value | escape | replace: '&lt;', '\u003c' | replace: '&gt;', '\u003e' }}"
                                        class="text-left rtl:text-right rtl:pr-5 whitespace-normal cursor-pointer bg-[rgba(var(--background-color),1)]"{% if option.selected_value == value %} selected="selected"{% endif %}
                                        {% if option_index > 0 %}x-text="!currentAvailableOptions[{{ option_index }}] || !currentAvailableOptions[{{ option_index }}].includes(`{{ value | escape }}`) ? `{{ 'products.product.value_unavailable' | t: value: value }}` : `{{ value }}`"{% endif %}
                                      >
                                        {% if option_disabled -%}
                                          {{- 'products.product.value_unavailable' | t: value: value -}}
                                        {%- else -%}
                                          {{- value | escape -}}
                                        {%- endif %}
                                      </option>
                                    {%- endfor -%}
                                  </select>
                                  <span class="absolute top-1/2 right-4 rtl:right-auto rtl:left-4 -translate-y-1/2 w-2.5 inline-block pointer-events-none">
                                    {% render 'icon-alls', icon: 'icon-caret' %}
                                  </span>
                                </div>
                              </div>
                            {% endif %}
                        {%- endfor -%}
                      </div>
                    </div>
                  {% endif %}
                </div>
              {%- else -%}
                <div 
                  x-intersect.once.margin.200px="document.addEventListener('eurus:cart:items-changed', () => {
                    Alpine.store('xUpdateVariantQuanity').updateQuantity('{{ section_id }}', '{{ card_product.url }}');
                  });"
                >
                </div>
                <div id="current-variant-{{ section_id }}" class="current-variant hidden">{{ card_product.selected_or_first_available_variant.id }}</div>
                <div id="current-price-{{ section_id }}" class="current-price hidden">{{ card_product.price }}</div>
                <div class="price x-card-price" role="status">
                  {% render 'price', product: card_product %}
                </div>
                {% if show_highlighted_features and settings.highlighted_features_position == "below_price" %}
                  {% render 'highlighted-features', card_product: card_product %}
                {% endif %}
                <div id="x-availability-notice-{{ section.id }}" class="mt-2.5 flex items-center mb-1 flex-wrap gap-1{% unless settings.info_alignment_card_product == 'right' %} justify-{{ settings.info_alignment_card_product }} rtl:flex-row-reverse md:rtl:list-layout:flex-row md:list-layout:justify-start{% endunless %}{% if settings.info_alignment_card_product == 'right' %} flex-row-reverse rtl:flex-row md:list-layout:flex-row{% endif %}" x-show="$store.xStoreSelector?.canShow('{{ card_product.id }}', [{{ card_product.collections | map: 'id' | join: ', ' }}])">
                  {%- render 'availability-notice',
                    product: card_product
                  -%}
                </div>
              {%- endunless -%}
              <div class="bottom-card ltr flex flex-wrap justify-{{ settings.info_alignment_card_product }} gap-1 mt-1 mb-0.5 empty:hidden"></div>
            </div>
            {%- unless settings.hide_cart -%}
              <div class="card-info pb-6 md:pb-7">                     
                {%- form 'product', card_product, id: product_form_id, class: 'form h-full', novalidate: 'novalidate', data-type: 'add-to-cart-form', x-ref: 'product_form' -%}
                  <input type="hidden" name="id" value="{{ card_product.selected_or_first_available_variant.id }}">
                  {% if settings.show_in_cart_items != 'none' %}
                    {% if settings.hide_when_pre_order %}                   
                      <div class="hidden" id="cart-edt-{{ section_id }}">
                        {% if can_show_preorder == false %}
                          {% render 'estimate-shipping-cart', product: card_product, message: settings.message_estimate_cart, disable_cart_edt: disable_cart_edt %}
                        {% endif %}
                      </div>
                    {% else %}
                      <div class="hidden" id="cart-edt-{{ section_id }}">
                        {% render 'estimate-shipping-cart', product: card_product, message: settings.message_estimate_cart, disable_cart_edt: disable_cart_edt %}
                      </div>
                    {% endif %}
                  {% endif %}
                  {% if settings.preorder_show != 'no' %}
                    <div class="hidden" id="preorder-{{ section_id }}">
                      {% if can_show_preorder %}
                        {% liquid  
                          assign message_preorder = 'general.preorder.message_preorder' | t
                          if settings.message_preorder != blank
                            assign message_preorder = settings.message_preorder
                          endif 
                        %}
                        <input name="properties[{{ 'general.preorder.name' | t }}]" class="hidden preorder-edt-properties" value="{{ message_preorder }}"/>
                      {% endif %}
                    </div>
                  {% endif %} 
                  <div x-show="!showButton" class="w-full flex" x-cloak>
                    <div class="inline-flex button button-outline not-icon border h-[39px] md:h-[45px] w-full justify-between items-center mt-2.5 bg-[rgba(var(--background-color),1)]"
                    >
                      <button class="w-10 cursor-pointer pt-2.5 pb-2.5 md:pt-3.5 md:pb-3.5 bg-transparent pl-3.5 pr-3.5 select-none opacity-70" name="minus" aria-label="minus" @click.prevent="setTimeout(() => { addToListDraft($el, '{{ card_product.id }}', '{{ card_product.url }}', {% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %}, 'minus') }, 0);">
                        {% render 'icon-alls', icon: 'icon-minus' %}
                      </button>
                      <input class="current-quantity outer-spin-button hide-spin-input focus:outline-none w-1/2 pt-2 pb-2 md:pt-2.5 md:pb-2.5 text-center bg-transparent"
                        type="number"
                        name="quantity"
                        id="Quantity-{{ section_id }}"
                        min="0"
                        value="1"
                        form="{{ product_form_id }}"
                        x-model="qty"
                        x-on:change="setTimeout(() => { addToListDraft($el, '{{ card_product.id }}', '{{ card_product.url }}', {% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %}) }, 0);"
                      >
                      <button class="w-10 cursor-pointer pt-2.5 pb-2.5 md:pt-3.5 md:pb-3.5 bg-transparent pr-3.5 pl-3.5 select-none opacity-70" name="plus"  aria-label="plus" @click.prevent="setTimeout(() => { addToListDraft($el, '{{ card_product.id }}', '{{ card_product.url }}', {% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %}, 'plus') }, 0);">
                        {% render 'icon-alls', icon: 'icon-plus' %}
                      </button>
                    </div>
                  </div>
                  {% liquid
                    assign check_against_inventory = true
                    if card_product.selected_or_first_available_variant.inventory_management != 'shopify' or card_product.selected_or_first_available_variant.inventory_policy == 'continue'
                      assign check_against_inventory = false
                    endif
                    if card_product.selected_or_first_available_variant.quantity_rule.min > card_product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
                      assign quantity_rule_soldout = true
                    endif
                  %}
                  <button 
                    x-show="showButton"
                    type="submit"
                    name="add"
                    id="x-atc-button-{{ section_id }}"
                    @click.prevent="setTimeout(() => { addToListDraft($el, '{{ card_product.id }}', '{{ card_product.url }}', {% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %}, '', '{{ settings.name_edt | default: "Note" }}') }, 0);"
                    class="button button--{{ section.id }} not-icon add_to_cart_button x-atb-button w-full button-outline text-center inline-block border empty:hidden pl-6 pr-6 pt-2.5 pb-2.5 md:pt-3 md:pb-3 mt-2.5 leading-normal disabled:cursor-not-allowed disabled:opacity-60"
                    {% if card_product.selected_or_first_available_variant.available == false
                      or quantity_rule_soldout
                      or card_product.selected_or_first_available_variant == nil
                    %}
                      disabled
                    {% endif %}
                  >
                    <span class="x-atc-text">
                      {%- if card_product.selected_or_first_available_variant == nil -%}
                        {{ 'products.product.unavailable' | t }}
                      {%- elsif card_product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
                        {{ 'products.product.sold_out' | t }}
                      {%- else -%}
                        {{ 'products.product.add' | t }}
                      {%- endif -%}
                    </span>
                  </button>
                {%- endform -%}
              </div>
            {%- endunless -%}
          </div>
        </div>
      </div>
    </div>