{% comment %}
    Renders a Promotion block

    Accepts:
    - image_ratio: {String} Size of the product image card. Values are "square", "rectangle", "round", "natural". Default is "square" (optional) 
    Usage:
    {% render 'promotion-block' %}
{% endcomment %}
{% liquid 
  assign title_size =  title_size | times: settings.heading_base_size | times: 0.000225
  assign text_size =  text_size | times: settings.text_base_size | times: 0.0000875
  assign corner_image = false
  if settings.edges_type == 'rounded_corners'
    assign corner_image = true
  endif
%}
{%- style -%}
  {% if image == blank %}
    .promotion-block-{{ block.id }}{
      {% if block.settings.background_color_light.alpha != 0.0 %}
        background: {{ block.settings.background_color_light }};
        border: 1px solid {{ block.settings.background_color_light }};
      {% else %}
        background: rgb(var(--colors-background-secondary));
        border: 1px solid rgb(var(--colors-background-secondary));
      {% endif %}
    }
    .dark .promotion-block-{{ block.id }}{
      {% if block.settings.background_color_dark.alpha != 0.0 %}
        background: {{ block.settings.background_color_dark }};
        border: 1px solid {{ block.settings.background_color_dark }};
      {% else %}
        background: rgb(var(--colors-background-secondary));
        border: 1px solid rgb(var(--colors-background-secondary));
      {% endif %}
    }
  {% endif %}
  .text-color--{{ block.id }} {
    {% if block.settings.text_color_light.alpha != 0.0 %}
      --colors-heading: {{ block.settings.text_color_light.red }}, {{ block.settings.text_color_light.green }}, {{ block.settings.text_color_light.blue }};
      --colors-text: {{ block.settings.text_color_light.red }}, {{ block.settings.text_color_light.green }}, {{ block.settings.text_color_light.blue }};
    {% endif %}
  }
  .dark .text-color--{{ block.id }} {
    {% if block.settings.text_color_dark.alpha == 0.0 %}
      --colors-text: var(--colors-text-secondary);
      --colors-heading: var(--colors-heading-secondary);
    {% else %}
      --colors-text:{{ block.settings.text_color_dark.red }}, {{ block.settings.text_color_dark.green }}, {{ block.settings.text_color_dark.blue }};
      --colors-heading: {{ block.settings.text_color_dark.red }}, {{ block.settings.text_color_dark.green }}, {{ block.settings.text_color_dark.blue }};
    {% endif %}
  }
  .heading-{{ blockID }} { 
    font-size: {{ title_size | times: 0.7 }}rem; 
  }
  .text-{{ block.id }} { 
    font-size: {{ text_size | times: 0.9 }}rem; 
  }
  {%- if show_button_style == 'primary' -%}
    .button--{{ block.id }}.button-solid,
    .button--{{ block.id }}.button-solid:before { 
      {%- unless color_button.alpha == 0.0 -%}
        --colors-line-and-border: {{ color_button.red }}, {{ color_button.green }}, {{ color_button.blue }};
        --colors-button: {{ color_button.red }}, {{ color_button.green }}, {{ color_button.blue }};
      {%- else -%}
        --colors-line-and-border: var(--colors-button);
      {%- endunless -%}
      {%- unless color_button_hover.alpha == 0.0 -%}
        --colors-button-hover: rgb({{ color_button_hover.red }}, {{ color_button_hover.green }}, {{ color_button_hover.blue }});
      {%- endunless -%}
      {%- unless color_text_button.alpha == 0.0 -%}
        --colors-button-text: {{ color_text_button.red }}, {{ color_text_button.green }}, {{ color_text_button.blue }};
      {%- endunless -%}
      {%- unless color_text_button_hover.alpha == 0.0 -%}
        --colors-button-text-hover: {{ color_text_button_hover.red }}, {{ color_text_button_hover.green }}, {{ color_text_button_hover.blue }};
      {%- endunless -%}
    }
  {%- endif -%}
  .button--{{ block.id }}.button-outline {
    {%- if secondary_button_text.alpha != 0.0 -%} 
      --colors-secondary-button: {{ secondary_button_text.red }}, {{ secondary_button_text.green }}, {{ secondary_button_text.blue }}; 
      --colors-line-secondary-button: {{ secondary_button_text.red }}, {{ secondary_button_text.green }}, {{ secondary_button_text.blue }};
      --background-secondary-button: transparent;
    {%- endif -%}
    {%- if color_button_secondary.alpha != 0.0 -%} 
      --background-secondary-button: {{ color_button_secondary.red }}, {{ color_button_secondary.green }}, {{ color_button_secondary.blue }}; 
      --colors-line-secondary-button: {{ color_button_secondary.red }}, {{ color_button_secondary.green }}, {{ color_button_secondary.blue }}; 
    {%- endif -%}
  }
  {% if colors_text_link.alpha != 0.0 %}
    .button--{{ block.id }}.button-text-link, .button--{{ block.id }}.button-text-link::after, .button--{{ block.id }}.button-text-link::before {
      --colors-text-link: {{ colors_text_link.red }}, {{ colors_text_link.green }}, {{ colors_text_link.blue }};
    }
  {% endif %}
  @media screen and (min-width: 1024px) {
    .heading-{{ blockID }} { 
      font-size: {{ title_size }}rem; 
    }
    .text-{{ block.id }} { 
      font-size: {{ text_size }}rem; 
    }
  }

  {% if image_ratio == "auto" %}
    .external-video{
      padding-bottom: {{ block.settings.video.preview_image.height }}px;
    }
  {% endif %}
{%- endstyle -%}
{%- liquid 
  assign class_layout = "flex flex-col justify-end"
  if columns_desktop <= 5
    if content_position
      assign class_layout = "flex items-" | append: content_position
    else
      assign class_layout = "flex items-center"
    endif
  endif

  if block.settings.image_mobile != blank
    assign image_mobile = block.settings.image_mobile
  else
    assign image_mobile = image
  endif
  assign video_type = false
  assign video_alt = block.settings.video_alt_text
  if block.settings.video_url.type == 'youtube'
    assign video_type = 'youtube'
    assign video_id = block.settings.video_url.id
  endif
  if block.settings.video_url.type == 'vimeo'
    assign video_type = 'vimeo'
    assign video_id = block.settings.video_url.id
  endif

  if block.settings.video != null
    assign video_type = 'video_select'
  endif

-%}
{% unless is_menu %}
<div class="{{ class_tall_mobile }} {{ class_tall_desktop }} md:list-layout:col-span-1 relative promotion-block promotion group{% unless image_ratio == "round" %} promotion-block-{{ block.id }}{% endunless %} {% unless image_ratio == "round" %}{% unless image %}h-full{% endunless %}{% endunless %}{% if image_extend_height and image %}h-full{% endif %}{% unless image_ratio == "round" or image_ratio == "auto" %} flex items-{{ content_position | default: 'center' }} min-h-[200px]{% endunless %} md:list-layout:min-h-[200px]{% if settings.edges_type == 'rounded_corners' %} rounded-[10px]{% endif %}">
  {% if video_type %}
    <div class="relative md:list-layout:pb-[30%] external-video{% if video_type == 'vimeo' %} bg-black{% endif %} h-full w-full{% if corner_image and image_ratio != "round" %} rounded-[10px]{% endif %}{% if image_ratio == "round" %} rounded-full{% endif %} overflow-hidden{% if block.settings.enable_video_autoplay %} video-hero{% endif %}{% unless image_ratio == "auto" %} pb-[{{ ratio }}%]{% endunless %}{% if collection_page %} lg:pb-[30%]{% endif %}" 
      x-intersect:leave="$store.xVideo.pause($el)"
      {% if block.settings.enable_video_autoplay %}
        @click.stop="$store.xVideo.togglePlay($el)"
        {% if video_type == 'video_select' %}x-intersect="$store.xVideo.play($el)"{% endif %}
        {% if video_type == 'youtube' or video_type == 'vimeo' %}
          x-intersect="$store.xVideo.externalLoad($el, '{{ video_type }}', '{{ video_id }}', false, '{{ video_alt }}')"
          x-intersect="$store.xVideo.play($el)"
        {% endif %}
      {% else %}
        {% if video_type == 'video_select' %}@click.prevent="$store.xVideo.mp4Thumbnail($el)"{% endif %}
        {% if video_type == 'youtube' or video_type == 'vimeo' %}@click.prevent="$store.xVideo.externalLoad($el, '{{ video_type }}', '{{ video_id }}', false, '{{ video_alt }}')"{% endif %}
      {% endif %}
    >
      {%- render 'media-video', 
        enable_video_autoplay: block.settings.enable_video_autoplay,
        video_type: video_type,
        image_mobile: block.settings.image_mobile
        video_id: video_id,
        video_alt: video_alt,
        video: block.settings.video,
        columns_desktop: 2,
        cover_image: image,
        show_sound_control: block.settings.show_sound_control
      -%}
      <span class="pointer-events-none absolute top-0 left-0 bottom-0 right-0 z-10 image-treatment-overlay opacity-{{ image_overlay_opacity }}{% if settings.edges_type == 'rounded_corners' %} rounded-[10px]{% endif %}"></span>
    </div>  
  {%- elsif image != blank or block.settings.image_mobile != blank -%}
    {%- capture sizes -%}
      (min-width: {{ settings.page_width }}px) {% if enable_desktop_slider %}{{ settings.page_width | plus: 100 | divided_by: columns_desktop }}px{% else %}calc((100vw - 10rem) / {{ columns_desktop }}){% endif %}, (min-width: 768px) {% if columns_desktop > 1 %}calc((100vw - 5rem) / 2){% else %}calc(100vw - 5rem){% endif %}, calc((100vw) / {{ columns_mobile }})
    {%- endcapture -%}
    {%- if loading == 'eager' -%}
      <div class="hidden">
        {%- if block.settings.image_mobile != blank -%}
          {{ block.settings.image_mobile | image_url: width: 1500 | image_tag: widths: '375, 450, 750, 900, 1100, 1500', preload: true, loading: 'lazy' }}
        {%- endif -%}
        {{ image | image_url: width: 1780 | image_tag: widths: '375, 450, 750, 900, 1100, 1500, 1780', preload: true, loading: 'lazy', sizes: sizes }}
      </div>
    {%- endif -%}
    <div 
      x-intersect.once.margin.-20px.0px.-20px.0px="$el.querySelector('.animate_transition_card__image')?.classList.add('active')"
      class="{% if image == blank %} md:hidden {% endif %}md:list-layout:pb-[30%] w-full h-full overflow-hidden relative z-0 before:h-0 before:block{% if corner_image and image_ratio != "round" %} rounded-[10px]{% endif %}{% if image_ratio == "round" %} rounded-full{%- endif -%}{% unless image_ratio == "auto" %} pb-[{{ ratio }}%]{% endunless %}{% if collection_page %} lg:pb-[30%]{% endif %}"
      {% if image_ratio == "auto" %} style="height:0; padding-bottom: {{ 100 | divided_by: image.aspect_ratio }}%;"{% endif %}
      {% if image_ratio == "last-promo" %} style="padding-bottom: {{ 100 | divided_by: image.aspect_ratio }}%;"{% endif %}
    >
      {% if image_link != blank %}
        <a href="{{ image_link }}" {% if open_new_window_image %} target="_blank"{% endif %} class="absolute top-0 left-0 bottom-0 right-0 z-20"></a>
      {% endif %}
      <div class="block{% if image_ratio == "round" %} rounded-full{% endif %}{% if corner_image and image_ratio != "round" %} rounded-[10px]{% endif %}">
        <div class="animate_transition_card__image w-full h-full top-0 left-0 absolute">
          {% # theme-check-disable ImgLazyLoading %}
          <picture>
            <source 
              srcset="{{ image | image_url: width: 375 }} 375w,
              {{ image | image_url: width: 450 }} 450w,
              {{ image | image_url: width: 750 }} 750w,
              {{ image | image_url: width: 900 }} 900w,
              {{ image | image_url: width: 1100 }} 1100w,
              {{ image | image_url: width: 1500 }} 1500w" 
              media="(max-width: 767px)" 
              width="{{ image.width }}" 
              height="{{ image.height }}"
            />
            <img
              srcset="{{ image | image_url: width: 225 }} 225w,
              {{ image | image_url: width: 375 }} 375w,
              {{ image | image_url: width: 450 }} 450w,
              {{ image | image_url: width: 750 }} 750w,
              {{ image | image_url: width: 900 }} 900w,
              {{ image | image_url: width: 1100 }} 1100w,
              {{ image | image_url: width: 1500 }} 1500w,
              {{ image | image_url: width: 1780 }} 1780w"
              src="{{ image | image_url: width: 1780 }}"
              sizes="{{ sizes }}"
              {% if settings.enable_lazy_loading_image %}loading="lazy"{% else %}loading="eager"{% endif %}
              alt="{{ image.alt | escape }}"
              width="{{ image.width }}"
              height="{{ image.width | divided_by: image.aspect_ratio }}"
              style="object-position: {{ image.presentation.focal_point }};"
              class="md:list-layout:hidden aspect-{{ image_ratio }} image-hover animate_transition_image w-full h-full object-cover{% if image_ratio == "round" %} rounded-full{% endif %}{% if corner_image and image_ratio != "round" %} rounded-[10px]{% endif %} hidden md:block animate-Xpulse skeleton-image"
              onload="this?.classList.add('active'); 
                this.closest('.skeleton-image')?.classList.remove('animate-Xpulse', 'skeleton-image');
                setTimeout(() => { this.closest('.animate_transition_card__image')?.classList.add('lazy_active', 'active'); }, 250);
              "
            >
          </picture>
          {%- if image_mobile != blank -%}
            <img
              srcset="{{ image_mobile | image_url: width: 375 }} 375w,
              {{ image_mobile | image_url: width: 450 }} 450w,
              {{ image_mobile | image_url: width: 750 }} 750w,
              {{ image_mobile | image_url: width: 900 }} 900w,
              {{ image_mobile | image_url: width: 1100 }} 1100w,
              {{ image_mobile | image_url: width: 1500 }} 1500w"
              sizes="100vw"
              src="{{ image_mobile | image_url: width: 750 }}"
              alt="{{ image_mobile.alt | escape }}"
              class="object-cover absolute top-0 left-0 h-full w-full md:hidden animate_transition_slide__image animate-Xpulse skeleton-image"
              {% if settings.enable_lazy_loading_image %}loading="lazy"{% else %}loading="eager"{% endif %}
              onload="this.closest('.skeleton-image')?.classList.remove('animate-Xpulse', 'skeleton-image'); this.closest('.animate_transition_slide__image')?.classList.add('active');"
              width="{{ image_mobile.width }}"
              height="{{ image_mobile.height }}"
              style="object-position: {{ image_mobile.presentation.focal_point }}"
            />  
          {%- endif %}
          {% if list_layout %}
            <img
              srcset="{{ image | image_url: width: 225 }} 225w,
              {{ image | image_url: width: 375 }} 375w,
              {{ image | image_url: width: 450 }} 450w,
              {{ image | image_url: width: 750 }} 750w,
              {{ image | image_url: width: 900 }} 900w,
              {{ image | image_url: width: 1100 }} 1100w,
              {{ image | image_url: width: 1500 }} 1500w,
              {{ image | image_url: width: 1780 }} 1780w"
              src="{{ image | image_url: width: 1780 }}"
              sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | plus: 100 }}px,100vw"
              {% if settings.enable_lazy_loading_image %}loading="lazy"{% else %}loading="eager"{% endif %}
              alt="{{ image.alt | escape }}"
              width="{{ image.width }}"
              height="{{ image.width | divided_by: image.aspect_ratio }}"
              style="object-position: {{ image.presentation.focal_point }};"
              class="aspect-{{ image_ratio }} hidden md:list-layout:block image-hover animate_transition_image w-full h-full object-cover animate-Xpulse skeleton-image{% if image_ratio == "round" %} rounded-full{% endif %}"
              onload="this?.classList.add('active'); 
                this.closest('.skeleton-image')?.classList.remove('animate-Xpulse', 'skeleton-image');
                setTimeout(() => { this.closest('.animate_transition_card__image')?.classList.add('lazy_active', 'active'); }, 250);
              "
            >
          {% endif %}
          {% # theme-check-enable ImgLazyLoading %}
        </div>
        <span class="pointer-events-none absolute top-0 left-0 bottom-0 right-0 z-10 image-treatment-overlay opacity-{{ image_overlay_opacity }}"></span>
      </div>
    </div>
  {% endif %}
{% else %}
  {% # theme-check-disable ImgLazyLoading %}
  <img
    srcset="{{ image | image_url: width: 225 }} 225w,
    {{ image | image_url: width: 375 }} 375w,
    {{ image | image_url: width: 450 }} 450w,
    {{ image | image_url: width: 750 }} 750w,
    {{ image | image_url: width: 900 }} 900w,
    {{ image | image_url: width: 1100 }} 1100w,
    {{ image | image_url: width: 1500 }} 1500w,
    {{ image | image_url: width: 1780 }} 1780w"
    src="{{ image | image_url: width: 1780 }}"
    sizes="(min-width: {{ settings.page_width }}px) {% if enable_desktop_slider %}{{ settings.page_width | plus: 100 | divided_by: columns_desktop }}px{% else %}calc((100vw - 10rem) / {{ columns_desktop }}){% endif %}, 
    (min-width: 768px) {% if columns_desktop > 1 %}calc((100vw - 5rem) / 2){% else %}calc(100vw - 5rem){% endif %}, 
    calc((100vw) / {{ columns_mobile }})"
    {% if settings.enable_lazy_loading_image %}loading="lazy"{% else %}loading="eager"{% endif %}
    alt="{{ image.alt | escape }}"
    width="{{ image.width }}"
    height="{{ image.width | divided_by: image.aspect_ratio }}"
    style="object-position: {{ image.presentation.focal_point }};"
    class="aspect-{{ image_ratio }} image-hover animate_transition_image w-full h-full object-cover z-10 duration-300 transition ease-out animate-Xpulse skeleton-image{% if image_ratio == "round" %} rounded-full{% endif %}"
    onload="this?.classList.add('active'); 
      this.closest('.skeleton-image')?.classList.remove('animate-Xpulse', 'skeleton-image');
      setTimeout(() => { this.closest('.animate_transition_card__image')?.classList.add('lazy_active', 'active'); }, 250);
    "
  >
  {% # theme-check-enable ImgLazyLoading %}
{% endunless %}
  <div class="w-full overflow-hidden pl-5 pr-5 md:pl-10 md:pr-10 z-10{% if image_ratio == "round" %}{% if image == blank and block.settings.video == blank %} flex pb-[100.0%] rounded-full items-center promotion-block-{{ block.id }} text-center{% else %} hidden{% endif %}{% endif %} absolute {% unless image_mobile == blank and video_type == false %} pointer-events-none{% endunless %} top-0 right-0 bottom-0 left-0 {{ class_layout }} pt-6 pb-6 lg:pt-8 lg:pb-8 text-{{ alignment }}">
    <div class="text-color--{{ block.id }}{% if image_ratio == "round" %} absolute top-1/2 -translate-y-1/2 left-4 right-4{% else %} w-full{% endif %}">
      {% if image_link != blank %}
        <a href="{{ image_link }}" {% if open_new_window_image %} target="_blank"{% endif %} class="absolute top-0 left-0 bottom-0 right-0 z-20"></a>
      {% endif %}
      {%- if icon != 'none' -%}
        {% unless custom_icon == blank and another_icon == blank and icon == 'another_icon' %}
          {% style %}
            .icon--{{ block.id }} {
              width: {{ icon_size | times: 0.7 }}px;
              height: {{ icon_size | times: 0.7 }}px;
            }
            @media (min-width: 1024px){
              .icon--{{ block.id }} {
                width: {{ icon_size }}px;
                height: {{ icon_size }}px;
              }
            }
          {% endstyle %}
          <div class="inline-flex items-center mb-3 md:mb-5 justify-{{ alignment }} text-[rgba(var(--colors-text))]">
            <span class="inline-block icon--{{ block.id }}">
              {% if custom_icon == blank %}
                {% if another_icon != blank and icon == 'another_icon' %}
                  {% render 'icon-new-alls', icon: another_icon %}
                {% else %}
                  {% render 'icon-labels-bags', icon: icon %}
                {% endif %}
              {% else %}
                {{ custom_icon }}
              {% endif %}
            </span>
          </div>
        {% endunless %}
      {%- endif -%}
      {%- if subheading != blank and image_ratio != "round" -%}
        <div class="subheading-{{ block.id }} mb-2 rte text-[rgb(var(--colors-text))] truncate whitespace-normal p-break-words">
          {{ subheading }}
        </div>
      {%- endif -%}
      {%- if heading != blank and image_ratio != "round" -%}
        <div class="text-color--{{ block.id }} ">
          {% render 'heading-highlight',
            headingId: blockID,
            heading: heading,
            highlight_type: highlight_type,
            color_heading_highlight_dark: color_heading_highlight_dark,
            color_heading_highlight_light: color_heading_highlight_light,
            class: 'mb-1 lg:mb-3 leading-tight',
            heading_tag: 'h3'
          %}
        </div>
      {%- endif -%}
      {%- if content != blank and image_ratio != "round" -%}
        <div class="text-{{ block.id }} rte text-[rgb(var(--colors-text))] truncate whitespace-normal p-break-words{% if button_label != blank %} mb-3 lg:mb-5{% endif %}">
          {{ content }}
        </div>
      {%- endif -%}
      {%- if button_label != blank -%}
        <a
          {% if button_link %} href="{{ button_link }}"{% if open_new_window %} target="_blank"{% endif %}{% else %} role="link" aria-disabled="true"{% endif %}
          aria-label="{{ button_label }}"
          class="pointer-events-auto button{% if show_button_style == 'secondary' %} button-outline{% elsif show_button_style == 'text-link' %} button-text-link {% else %} button-solid{% endif %} button--{{ block.id }} z-30 inline-block empty:hidden pl-4 pr-4 lg:pl-6 lg:pr-6 pt-2.5 pb-2.5 leading-normal md:pt-3 md:pb-3 cursor-pointer p-break-words{% if content == blank and image_ratio != "round" %} mt-3{% endif %}{% if button_link == blank %} hover:cursor-not-allowed opacity-70{%- endif -%}"
        >
          {% render 'button-label', button_label: button_label, show_button_style: show_button_style %}
        </a>
      {%- endif -%}
    </div>
  </div>
  {%- if heading != blank and image_ratio == "round" -%}
    <p class="text-color--{{ block.id }} text-center leading-tight pt-4 pb-4{% if columns_desktop <= 8 %} text-medium{% endif %}">
      {{ heading }}
    </p>
  {%- endif -%}
{% unless is_menu %}
</div>
{% endunless %}